apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {

    }

    http {
      upstream default {
        server ipfs:8080;
      }

      server {
        listen *:80;
        listen *:443 ssl;
        server_name ethdns.xyz;
        server_name eth.link;
        ssl_certificate /etc/ssl/ethdns.xyz/tls.crt;
        ssl_certificate_key /etc/ssl/ethdns.xyz/tls.key;
        ssl_certificate /etc/ssl/eth.link/tls.crt;
        ssl_certificate_key /etc/ssl/eth.link/tls.key;

        location /dns-query {
          add_header Access-Control-Allow-Origin *;
          add_header Access-Control-Allow-Methods 'POST, GET, OPTIONS';
          add_header Access-Control-Allow-Headers Content-Type;
          add_header Access_Control_Max_Age 86400;
          if ($request_method = OPTIONS) {
            return 204;
          }
          proxy_pass https://coredns-doh;
          proxy_set_header Host $host;
          proxy_ssl_session_reuse on;
        }

        location / {
          proxy_pass http://default;
          proxy_set_header Host $host;
        }
      }

      server {
        listen *:80;
        listen *:443 ssl;
        server_name *.eth.link;
        ssl_certificate /etc/ssl/eth.link/tls.crt;
        ssl_certificate_key /etc/ssl/eth.link/tls.key;

        location / {
          proxy_pass http://default;
          proxy_set_header Host $host;
        }
      }
    }
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: nginx:1.17.3
          name: nginx
          ports:
            - containerPort: 80
              hostPort: 80
              name: http
            - containerPort: 443
              hostPort: 443
              name: https
          securityContext:
            capabilities:
              add: ["NET_BIND_SERVICE"]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nginx
            - name: eth-link-cert
              mountPath: /etc/ssl/eth.link
            - name: ethdns-xyz-cert
              mountPath: /etc/ssl/ethdns.xyz
          resources:
            requests:
              memory: "100Mi"
              cpu: "200m"
      volumes:
        - name: config-volume
          configMap:
            name: nginx-config
        - name: eth-link-cert
          secret:
            secretName: eth-link-cert
        - name: ethdns-xyz-cert
          secret:
            secretName: ethdns-xyz-cert
