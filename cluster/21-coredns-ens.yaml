apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns-config
data:
  Corefile: |
    . {
      log
      pprof {
        block
      }
      rewrite stop {
        name regex (.*)\.eth\.domains {1}.eth
        answer name (.*)\.eth {1}.eth.domains
      }
      ens {
        # connection is the connection to an Ethereum node.  It is *highly*
        # recommended that a local node is used, as remote connections can
        # cause DNS requests to time out.
        # This can be either a path to an IPC socket or a URL to a JSON-RPC
        # endpoint.
        connection http://geth:8545/

        ethlinknameservers ns1.ethlab.xyz

        # ipfsgatewaya is the address of an ENS-enabled IPFS gateway.
        # This value is returned when a request for an A record of an Ethlink
        # domain is received and the domain has a contenthash record in ENS but
        # no A record.  Multiple values can be supplied, separated by a space,
        # in which case all records will be returned.
        ipfsgatewaya 35.241.8.114

        # ipfsgatewayaaaa is the address of an ENS-enabled IPFS gateway.
        # This value is returned when a request for an AAAA record of an Ethlink
        # domain is received and the domain has a contenthash record in ENS but
        # no A record.  Multiple values can be supplied, separated by a space,
        # in which case all records will be returned.
        # ipfsgatewayaaaa 2a01:4f8:160:4069::2
      }
      file /etc/coredns/eth.domains.zone eth.domains
      errors
      health
    }
  eth.domains.zone: |
    $ORIGIN eth.domains.
    @ 3600 IN SOA ns1.ethlab.xyz. nick.ens.domains. (
        2017042745 ; serial
        7200       ; refresh (2 hours)
        3600       ; retry (1 hour)
        1209600    ; expire (2 weeks)
        3600       ; minimum (1 hour)
      )
    @ IN NS ns1.ethlab.xyz.
    _acme-challenge IN CNAME _eth-domains-acme-challenge.ethlab.xyz.
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: coredns
  labels:
    app: coredns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coredns
  template:
    metadata:
      labels:
        app: coredns
    spec:
      containers:
        - name: coredns
          image: wealdtech/coredns-ens:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 53
            - containerPort: 8080
            - containerPort: 6053
          args:
            - "-conf=/etc/coredns/Corefile"
          resources:
            requests:
              memory: "1Gi"
              cpu: "100m"
          volumeMounts:
            - name: config-volume
              mountPath: /etc/coredns
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 6
            periodSeconds: 6
      volumes:
        - name: config-volume
          configMap:
            name: coredns-config
---
apiVersion: v1
kind: Service
metadata:
  name: coredns-tcp
  labels:
    app: coredns
spec:
  ports:
  - port: 53
    protocol: TCP
    name: dns-tcp
  selector:
    app: coredns
  type: LoadBalancer
  loadBalancerIP: %(coredns_ip)s
---
apiVersion: v1
kind: Service
metadata:
  name: coredns-udp
  labels:
    app: coredns
spec:
  ports:
  - port: 53
    protocol: UDP
    name: dns-udp
  selector:
    app: coredns
  type: LoadBalancer
  loadBalancerIP: %(coredns_ip)s
